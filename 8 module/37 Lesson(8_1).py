# Домашнее задание по уроку "Try и Except".
# Задание "Программистам всё можно":
# Пора разрушать шаблоны привычного нам Python! Вот вас раздражает, что мы не можем сложить число(int) и строку(str)? Давайте исправим это недоразумение!
# Реализуйте следующую функцию:
# add_everything_up, будет складывать числа(int, float) и строки(str)
# Описание функции:
# add_everything_up(a, b) принимает a и b, которые могут быть как числами(int, float), так и строками(str).
# TypeError - когда a и b окажутся разными типами (числом и строкой), то возвращать строковое представление этих двух данных вместе (в том же порядке). Во всех остальных случаях выполнять стандартные действия.
# Пример кода:
# print(add_everything_up(123.456, 'строка'))
# print(add_everything_up('яблоко', 4215))
# print(add_everything_up(123.456, 7))
# Вывод в консоль:
# 123.456строка
# яблоко4215
# 130.456
# Примечания:
# Конструкции try-except в функции выполняют строго ту обработку, которая написана в задании (обращайте на важность порядка передачи данных).
# Если хотите дополнить функции своими исключениями или написать отдельно дополнительно собственные функции - это не запрещено, мы не против, чтобы вы больше экспериментировали. Но в первую очередь выполните поставленную задачу.

from decimal import Decimal

def add_everything_up(a, b):
    if isinstance(a, str) and isinstance(b,str):
        return a + b
    elif isinstance(a, (int,float)) and isinstance(b, (int,float)):
        return Decimal(str(a))+Decimal(str(b))
    elif ((isinstance(a, (int, float)) and isinstance(b, str)) or
              (isinstance(a, str) and isinstance(b, (int, float)))):
        return str(a) + str(b)
    else:
        raise TypeError("\n\033[31mНеподдерживаемый типы данных\033[0m")

try:
    print(add_everything_up(123.456, 'строка'))  # Ожидается конкатенация
    print(add_everything_up('яблоко', 4215))  # Ожидается конкатенация
    print(add_everything_up(123.456, 7))  # Ожидается сложение

    # Передаем в качестве аргумента словарь, чтобы вызвать ошибку
    print(add_everything_up({"Возраст": 37}, 123))  # Ожидается ошибка типа
except TypeError as e:
    # Обработка ошибок типа
    print(e)